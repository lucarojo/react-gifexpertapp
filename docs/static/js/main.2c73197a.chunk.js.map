{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDdwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAIpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEnD,sBAAKgB,UAAU,YAAf,UACKI,GAAW,mBAAGJ,UAAU,mCAAb,qBAERH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,cEYtBgB,EA3BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KASvB,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACX,cAAC,EAAD,CAEI7B,SAAUA,GADLA,Y,MCjB7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2c73197a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)  => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [ inputValue, ...cats, ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5nZg4AN9dXi9j7bpFy19qgQYBMn2fkdA`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt= {title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport {GifGridItem} from '../components/GifGridItem'\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            <div className=\"card-grid\">\n                {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n                {\n                    images.map((img) => (\n                        <GifGridItem \n                            key={img.id} \n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n       \n    )\n}\n","import { useEffect, useState } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) =>{\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(()=> {\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false,\n                })\n            })\n    }, [category])\n\n\n    return state;\n}","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     // setCategories(['HunterxHounter', ... categories]);\n    //     setCategories(cats => [...cats, 'HunterxHunter']);\n    // }\n\n    return (\n    <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories}/>\n        <hr/>\n        <ol>\n            {\n                categories.map((category, i) => (\n                    <GifGrid \n                        key={category}\n                        category={category} \n                    />\n                ))\n            }\n        </ol>\n    </>)\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}